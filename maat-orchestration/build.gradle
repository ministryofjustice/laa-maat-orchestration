import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
	id "java"
	id "jacoco"
	id "org.sonarqube" version "4.0.0.2929"
	id "info.solidsoft.pitest" version "1.9.11"
	id "org.springframework.boot" version "3.1.2"
	id "org.jsonschema2dataclass" version "6.0.0"
}

group = "uk.gov.justice.laa.crime"

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

def versions = [
		pitest                  : "1.4.10",
		sentryVersion			: "6.15.0",
		springdocVersion        : "2.1.0",
		okhttpVersion           : "4.9.3",
		wiremockVersion    		: "2.35.0"
]

configurations {
	configureEach {
		exclude group: 'junit', module: 'junit'
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation platform("io.sentry:sentry-bom:$versions.sentryVersion")
	implementation platform(SpringBootPlugin.BOM_COORDINATES)
	annotationProcessor platform(SpringBootPlugin.BOM_COORDINATES)

	implementation "io.sentry:sentry-logback"
	implementation "io.sentry:sentry-spring-boot-starter"

	implementation "org.apache.commons:commons-lang3"
	implementation "io.micrometer:micrometer-registry-prometheus"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$versions.springdocVersion"

	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-webflux"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-starter-validation"


	compileOnly "org.projectlombok:lombok"
	annotationProcessor "org.projectlombok:lombok"

	testImplementation "com.h2database:h2"
	testImplementation "org.pitest:pitest:$versions.pitest"
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.springframework.security:spring-security-test"
	testImplementation "com.squareup.okhttp3:okhttp:$versions.okhttpVersion"
	testImplementation "com.github.tomakehurst:wiremock-jre8-standalone:$versions.wiremockVersion"
}

jacoco {
	toolVersion = "0.8.8"
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"**/entity/**",
					"**/dto/**",
					"**/config/**"
			])
		}))
	}
}

pitest {
	targetClasses = [
			"uk.gov.justice.laa.maat.orchestration.*",
			"uk.gov.justice.laa.maat.orchestration.controller.*",
			"uk.gov.justice.laa.maat.orchestration.validation.*"
	]
	excludedClasses = [
			"uk.gov.justice.laa.maat.orchestration.dto.*",
			"uk.gov.justice.laa.maat.orchestration.mapper.*",
			"uk.gov.justice.laa.maat.orchestration.MAATOrchestrationApplication"
	]
	threads = 5
	outputFormats = ["XML", "HTML"]
	timestampedReports = false
	mutationThreshold = 60
}
