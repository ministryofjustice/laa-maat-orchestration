plugins {
	id "java"
	id "jacoco"
	id "org.sonarqube" version "6.2.0.5505"
	id "info.solidsoft.pitest" version "1.15.0"
	id "org.springframework.boot" version "3.5.6"
	id "io.spring.dependency-management" version "1.1.7"
}

group = "uk.gov.justice.laa.crime"

java {
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

def versions = [
		pitest                  : "1.20.7",
		sentry					: "8.23.0",
		springdocVersion        : "2.8.13",
		commonsModSchemas       : "1.36.0",
		crimeCommonsClasses     : "4.9.0",
		wiremock				: "3.10.6",
		resilience4jVersion     : "2.3.0",
		commonsLang3Version		: "3.19.0",
]

configurations {
	configureEach {
		exclude group: 'junit', module: 'junit'
	}
}

repositories {
	mavenCentral()
	maven {
		url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
	}
}

dependencies {

	// ---- Monitoring & Logging ----
	implementation("io.sentry:sentry-logback")
	implementation "io.micrometer:micrometer-tracing"
	implementation "io.micrometer:micrometer-tracing-bridge-brave"
	implementation "io.micrometer:micrometer-registry-prometheus"
	implementation "io.sentry:sentry-spring-boot-starter-jakarta"
	implementation platform("io.sentry:sentry-bom:$versions.sentry")

	// ---- Core Application ----
	implementation "uk.gov.justice.service.laa-crime:crime-commons-classes:$versions.crimeCommonsClasses"
	implementation "uk.gov.justice.service.laa-crime:crime-commons-mod-schemas:$versions.commonsModSchemas"

	implementation "org.apache.commons:commons-lang3:$versions.commonsLang3Version"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$versions.springdocVersion"

	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-starter-webflux"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-client"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
	implementation "org.springframework.boot:spring-boot-starter-security"

	// ---- Resilience4j ----
	implementation "io.github.resilience4j:resilience4j-reactor:$versions.resilience4jVersion"
	implementation "io.github.resilience4j:resilience4j-spring-boot3:$versions.resilience4jVersion"

	// ---- Lombok ----
	compileOnly "org.projectlombok:lombok"
	annotationProcessor "org.projectlombok:lombok"
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	// ---- Testing ----
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.wiremock.integrations:wiremock-spring-boot:$versions.wiremock"

	testCompileOnly "org.projectlombok:lombok"
	testAnnotationProcessor "org.projectlombok:lombok"
}

jacoco {
	toolVersion = "0.8.13"
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"**/dto/**",
					"**/config/**",
					"**/model/**"
			])
		}))
	}
}

pitest {
	pitestVersion = "1.20.7"
	targetClasses = [
			"uk.gov.justice.laa.maat.orchestration.*",
			"uk.gov.justice.laa.maat.orchestration.controller.*",
			"uk.gov.justice.laa.maat.orchestration.validation.*"
	]
	excludedClasses = [
			"uk.gov.justice.laa.maat.orchestration.dto.*",
			"uk.gov.justice.laa.maat.orchestration.mapper.*",
			"uk.gov.justice.laa.maat.orchestration.MAATOrchestrationApplication"
	]
	threads = 5
	outputFormats = ["XML", "HTML"]
	timestampedReports = false
	mutationThreshold = 60
}


tasks.named("sonar") {
	it.dependsOn test
}

sonar {
	properties {
		property "sonar.exclusions", "**/dto/**.java , **/model/**.java, **/config/**.java, **/enums/**.java, **/exception/**.java"
		property "sonar.coverage.exclusions", "**/MAATOrchestrationApplication.java, **/model/**.java"
		property layout.buildDirectory.file("reports/jacoco/test/jacocoTestReport.xml").get().asFile.absolutePath
		property "sonar.projectKey", "ministryofjustice_laa-maat-orchestration"
		property "sonar.organization", "ministryofjustice"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.projectName", "Crime Apps :: maat-orchestration"
		property "sonar.pitest.mode", "reuseReport"
		property "sonar.pitest.reportsDirectory", "build/reports/pitest"
	}
}

